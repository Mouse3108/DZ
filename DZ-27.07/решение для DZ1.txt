задача 1 (творческое задание).
Составьте БД (минимум из 3 таблиц) на произвольную тему и напишите 10 разных произвольных запросов для созданной БД.


-- Создание таблицы преподавателей

CREATE TABLE Преподаватели (
    Идентификатор INT PRIMARY KEY,
    Имя VARCHAR,
    Телефон VARCHAR(15)
);


-- Создание таблицы студентов

CREATE TABLE Студенты (
    Идентификатор INT PRIMARY KEY,
    Имя VARCHAR,
    Телефон VARCHAR(15)
);


-- Создание таблицы расписания занятий

CREATE TABLE Расписание (
    Идентификатор INT PRIMARY KEY,
    Тема VARCHAR,
    Дата DATETIME,
    Преподаватель VARCHAR,
    Примечание TEXT,
    FOREIGN KEY (Преподаватель) REFERENCES Преподаватели(Идентификатор)    
);


-- Создание таблицы посещаемости занятий

CREATE TABLE Посещаемость (
    Тема INT,
    Студент INT,
    FOREIGN KEY (Тема) REFERENCES Расписание(Идентификатор),
    FOREIGN KEY (Студент) REFERENCES Студенты(Идентификатор)
);


-- Заполнение таблицы преподавателей

INSERT INTO Преподаватели (Идентификатор, Имя, Телефон)
VALUES
    (1, 'Преподаватель 1', '+7(495)111-1111'),
    (2, 'Преподаватель 2', '+7(495)222-2222');


-- Заполнение таблицы студентов

INSERT INTO Студенты (Идентификатор, Имя, Телефон)
VALUES
    (1, 'Студент 1', '+7(111)121-1111'),
    (2, 'Студент 2', '+7(222)112-1111'),
    (3, 'Студент 3', '+7(333)211-1111'),
    (4, 'Студент 4', '+7(444)111-2111'),
    (5, 'Студент 5', '+7(555)111-1121'),
    (6, 'Студент 6', '+7(666)111-1211'),
    (7, 'Студент 7', '+7(777)111-1112'),
    (8, 'Студент 8', '+7(888)112-1211'),
    (9, 'Студент 9', '+7(999)211-1211'),
    (10, 'Студент 10', '+7(123)121-1112');


-- Заполнение таблицы расписания занятий

INSERT INTO Расписание (Идентификатор, Тема, Дата, Преподаватель, Примечание)
VALUES
    (1, 'Тема 1', '2024-06-22 10:00:00', 1, 'проведено'),
    (2, 'Тема 2', '2024-06-22 11:30:00', 1, 'проведено'),
    (3, 'Тема 3', '2024-06-23 10:00:00', 1, 'проведено'),
    (4, 'Тема 4', '2024-06-23 11:30:00', 1, 'проведено'),
    (5, 'Тема 5', '2024-06-29 10:00:00', 1, 'проведено'),
    (6, 'Тема 6', '2024-06-29 11:30:00', 1, 'проведено'),
    (7, 'Тема 7', '2024-06-30 10:00:00', 1, 'проведено'),
    (8, 'Тема 8', '2024-06-30 11:30:00', 1, 'проведено'),
    (9, 'Тема 9', '2024-07-06 10:00:00', 1, 'проведено'),
    (10, 'Тема 10', '2024-07-06 11:30:00', 1, 'проведено'),
    (11, 'Тема 11', '2024-07-07 10:30:00', 1, 'проведено'),
    (12, 'Тема 12', '2024-07-07 11:30:00', 1, 'проведено'),
    (13, 'Тема 13', '2024-07-13 10:00:00', 1, 'отменено'),
    (14, 'Тема 14', '2024-07-13 11:30:00', 1, 'отменено'),
    (15, 'Тема 15', '2024-07-14 10:00:00', 1, 'отменено'),
    (16, 'Тема 16', '2024-07-14 11:30:00', 1, 'отменено'),
    (17, 'Тема 17', '2024-07-20 10:00:00', 2, 'проведено'),
    (18, 'Тема 18', '2024-07-20 11:30:00', 2, 'проведено'),
    (19, 'Тема 19', '2024-07-21 10:00:00', 2, 'проведено'),
    (20, 'Тема 20', '2024-07-21 11:30:00', 2, 'проведено'),
    (21, 'Тема 21', '2024-07-27 10:00:00', 2, 'запланировано'),
    (22, 'Тема 22', '2024-07-27 11:30:00', 2, 'запланировано'),
    (23, 'Тема 23', '2024-07-28 10:00:00', 2, 'запланировано'),
    (24, 'Тема 24', '2024-07-28 11:30:00', 2, 'запланировано');


-- Заполнение таблицы посещаемости занятий

INSERT INTO Посещаемость (Тема, Студент)
VALUES
    (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10),
    (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10),
    (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6), (3, 7), (3, 8), (3, 9), (3, 10),
    (4, 1), (4, 2), (4, 5), (4, 6), (4, 7), (4, 8), (4, 10),
    (5, 1), (5, 2), (5, 5), (5, 6), (5, 7), (5, 8), (5, 10),
    (6, 1), (6, 2), (6, 5), (6, 6), (6, 7), (6, 8), (6, 10),
    (7, 1), (7, 2), (7, 4), (7, 5), (7, 6), (7, 7), (7, 8), (7, 9), (7, 10),
    (8, 1), (8, 2), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9), (8, 10),
    (9, 1), (9, 2), (9, 3), (9, 4), (9, 5), (9, 6), (9, 7), (9, 8), (9, 10),
    (10, 1), (10, 2), (10, 3), (10, 4), (10, 6), (10, 7), (10, 8), (10, 10),
    (11, 1), (11, 2), (11, 4), (11, 6), (11, 7), (11, 8), (11, 9), (11, 10),
    (12, 1), (12, 2), (12, 4), (12, 6), (12, 7), (12, 8), (12, 9),
    (17, 1), (17, 2), (17, 3), (17, 4), (17, 5), (17, 8), (17, 9), (17, 10),
    (18, 1), (18, 2), (18, 3), (18, 4), (18, 5), (18, 8), (18, 9), (18, 10),
    (19, 1), (19, 2), (19, 3), (19, 4), (19, 5), (19, 6), (19, 7), (19, 8), (19, 9), (19, 10),
    (20, 1), (20, 2), (20, 3), (20, 4), (20, 5), (20, 6), (20, 7), (20, 8), (20, 9), (20, 10);


ЗАПРОСЫ:

-- 1. Сколько занятий провел каждый из преподавателей

SELECT Имя, COUNT(Тема) AS 'Количество тем'
FROM Преподаватели p
JOIN Расписание ON p.Идентификатор = Преподаватель AND Примечание = 'проведено'
GROUP BY Имя;


-- 2. Какие темы были рассмотрены в июне

SELECT Тема, Дата
FROM Расписание 
WHERE Дата LIKE '%-06-%' AND Примечание = 'проведено';


-- 3. У каких преподавателей какие занятия были отменены

SELECT Имя, Тема, Дата, Примечание
FROM Преподаватели p
JOIN Расписание ON p.Идентификатор = Преподаватель AND Примечание = 'отменено';


-- 4. Сколько занятий запланировано у преподавателей 

SELECT Имя, COUNT(Тема) AS 'Количество запланированных тем'
FROM Расписание
RIGHT JOIN Преподаватели p ON p.Идентификатор = Преподаватель AND Примечание = 'запланировано'
GROUP BY Имя;


-- 5. Сколько студентов присутствовало на каждом из занятий

SELECT Тема, Дата, Примечание, Имя AS 'Преподаватель', COUNT(Студент) AS 'Количество присутствующих'
FROM Расписание r
LEFT JOIN Посещаемость po ON r.Идентификатор = po.Тема
JOIN Преподаватели pr ON pr.Идентификатор = r.Преподаватель
GROUP BY r.Тема
ORDER BY 2;

-- 6. Добавить в группу нового студента, у которого нет телефона

INSERT INTO Студенты (Идентификатор, Имя)
VALUES
    (11, 'Студент 11');


-- 7. Определить посещаемость каждого студента (от лучших к худшим)

SELECT Имя, COUNT(p.Тема) AS 'Количество посещенных занятий'
FROM Расписание r
JOIN Посещаемость p ON r.Идентификатор = p.Тема
RIGHT JOIN Студенты s ON s.Идентификатор = Студент
GROUP BY Имя
ORDER BY 2 DESC, 1;


-- 8. Определить среднюю посещаемость за весь период

SELECT COUNT(Студент) / COUNT(DISTINCT Тема) AS 'Средняя посещаемость (количество студентов)'
FROM Посещаемость


-- 9. Определить среднюю посещаемость студентов у каждого преподавателя

SELECT Имя, COUNT(Студент) / COUNT(DISTINCT po.Тема) AS 'Средняя посещаемость (количество студентов)'
FROM Посещаемость po
JOIN Расписание r ON r.Идентификатор = po.Тема
JOIN Преподаватели pr ON pr.Идентификатор = r.Преподаватель
GROUP BY 1


-- 10. Кто из студентов пропустил сколько занятий
SELECT Имя, COUNT(Тема) AS 'Количество пропущенных занятий'
FROM Расписание r
RIGHT JOIN Студенты s ON s.Идентификатор NOT IN(
    SELECT Студент
    FROM Посещаемость 
    WHERE r.Идентификатор = Тема) AND Примечание = 'проведено'
GROUP BY 1
ORDER BY 2;